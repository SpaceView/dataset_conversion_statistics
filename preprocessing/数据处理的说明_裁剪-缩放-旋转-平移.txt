重命令：裁剪-->缩放-->旋转-->平移


***************************************************************************************
step00_extract_filetime_and_rename.py
以时间顺序重命名（不移动文件，直接重命名），
如果文件在不同的文件夹
则需要重命令以生成和已有文件不冲突的名称
---------------------------------------------------------
通常初步标注在这里完成标注， 自动识别所有子文件夹下的图片文件
E:/MyData/0221/0218test_org
---------------------------------------------------------


***************************************************************************************
step01_rename_multifolder_to_singlefolder.py
将文件从多个分开的文件夹中转移到单个文件夹
这一步通常需要把所有需要训练的图片文件放入到一个总的文件夹中。
---------------------------------------------------------
img_org_root = 'E:/MyData/0221/0221test_org'
img_tgt_root = 'E:/MyData/0221/0221test/img/rename'
---------------------------------------------------------


***************************************************************************************
step02_correct_image_info_after_rename_inplace.py
此时，总文件夹的对应的图片如果有标注存在，因为经过重命名，
标注中的文件名会与新的名称不匹配，在此修改"imagePath"使之匹配
------------------------------------------------------------------------------
通常需要修改的标注在这里完成
相当于这里是各个文件夹图片的集成，这里检查没问题之后，
后面的图片都会进入模型进行训练。
os.environ["IMG_ROOT_PATH"] = 'E:/MyData/0221/final/img/rename'
os.environ["TGT_ROOT_PATH"] = 'E:/MyData/0221/final/img/renameTgt'
或者inplace,
os.environ["IMG_ROOT_PATH"] = 'E:/MyData/0221/final/imgResize'
------------------------------------------------------------------------------


***************************************************************************************
step03_cut.py：裁剪 
ht/wd~1:1>0.85 圆形视角的：cut to 1:1
ht/wd~3:4<0.85 方形视角的：cut to 4:3
------------------------------------------------------------------------------
os.environ["IMG_ROOT_PATH"] = 'E:/MyData/0221/final/img/renameTgt'  原图
os.environ["TARGET_PATH"]   = 'E:/MyData/0221/final/img/renameCut'  裁剪图
------------------------------------------------------------------------------


***************************************************************************************
step04_resize：缩放
（1）scaling generalization --> 是否可忽略？
    （1a）横向压缩再填充
    （1b）纵向压缩再填充
（2）resize to taget size
------------------------------------------------------------------------------
注意，源文件夹包括所有的的 裁剪过的：renameCut, 原图：renameTgt
img_org_root = 'E:/MyData/0221/final/img'     == renameCut + renameTgt
img_tgt_root = 'E:/MyData/0221/final/imgResize'
------------------------------------------------------------------------------


***************************************************************************************
step05：旋转
（1）任意起始角度，
------------------------------------------------------------------------------
'E:/MyData/0221/final/imgResize',
'E:/MyData/0221/final/imgResize/rot'
------------------------------------------------------------------------------


***************************************************************************************
step06a：平移+缩放+padding
每张图生成任意方向的两张图，
（1）原图 --> (可选) 缩小或放大 --> 填充到640x640 --> 移动到任意(-x, -y)或(x, y)位置

缩小或放大的比例：锁定 2.0 -> 0.5
------------------------------------------------------------------------------
'E:/MyData/0221/final/rot'
'E:/MyData/0221/final/rotrans'  --> rot + translation
------------------------------------------------------------------------------


=====================================================

图片数量计算：
2000*8  =  16000  --> generated from rotation
16000*3 = 4800    --> 1 pan shift (translation) + 1 scale + 1?


